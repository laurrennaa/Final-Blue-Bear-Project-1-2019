/*In the body are all of the different parts of the page broken up. In this webpage the body covers my whole screen. Therefore, my width
and height are both 100%*/
body {
	width: 100%;
	height: 100%;
	margin: 0;
	display: flex;
	background-image: url("images/bluebear.jpg");
	background-size: 1535px 750px;
	background-position: center;
	background-repeat: no-repeat;
	cursor: url("https://img.icons8.com/offices/16/000000/bear.png") 10 10, auto;
}
.background-col {
	height: 72%;
	width: 84%;
	display: flex;
	background-color: white; 
	margin: auto;
	border: 3px;
	padding: 10px;
}
/*Each of the different color named divs diplay how the page is broken up and the design for each column.*/
.pink-col {
	height: 100%;
	/*Calc is used in the css height and width to break up the page without calculating it yourself.*/
	width: calc(100%/3);
	background-color: white;
	margin: auto;
	padding: 5px;
}
.green-col {
	height: 50%;
	width: 100%;
	display: flex;
	background-color: white; 
}
.grey-col {
	height: 50%;
	width: 100%;
	display: flex;
	background-color: white;
}

.purple-col {
	height: 100%;
	width: calc(100%/3);
	background-color: white;
	margin: auto; 
	padding: 5px;
}	 
.orange-col {
	height: calc(100%/3);
	width: 100%;
	display: flex;
	background-color: white; 
}
.black-col {
	height: calc(100%/3);
	width: 100%;
	display: flex;
	background-color: white ; 
}
.white-col {
	height: calc(100%/3);
	width: 100%;
	display: flex;
	background-color: white ; 
}
.width{
	width: 100%;
	height: 100%; 
	margin: 20;
}
h1{
	font-size: 25px;
	font-family: 'Cairo', sans-serif;
	/*Making sure the link to the css font is in the HTML is the main key for the font to show up on the display*/
	Margin: 10; 
	text-align: center; 
}
/* https://philipwalton.github.io/solved-by-flexbox/demos/vertical-centering/ */
/* If you're using 'display: flex' this class can be used to easily center horizontally! */
.center-horizontal {
	align-items: center;	
}

/* If you're using 'display: flex' this class can be used to easily center vertically! */
.center-vertical {
	justify-content: center;
}

/* Keep your image from overflowing it's parent DIV */
.contain-image {
	max-height: 100%;
	max-width: 100%;
}

@media only screen and (max-width: 414px){
	body{
		background-image: url("images/download.png");
	}
	/* We needed to change the background when the page moved to our mobile device. Therefore, the background showed properly. 
	this was a white background.*/
	.background-col {
	height: 100%;
	width: 100%;
	display: block;
	background-color: white; 
	margin: auto;
	border: 3px;
	padding: 10px;
}
	/*We needed each of the divs to expand into full capacity displayed on the screen*/
	.pink-col {
	height: 100%;
	width: 100%;
	}
	.purple-col {
	height: 100%;
	width: 100%;
	background-color: white;
	margin: auto; 
	padding: 5px;
}	
